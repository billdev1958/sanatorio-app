name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Login en Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASS }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin

      - name: Construir y subir imágenes a Docker Hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
        run: |
          # Backend - Mantener la versión fija
          docker build --no-cache -t $DOCKER_USER/sanatorio-back:1.0 ./sanatorio-back
          docker push $DOCKER_USER/sanatorio-back:1.0

          # Frontend - Mantener la versión fija
          docker build --no-cache -t $DOCKER_USER/csm-pacientes:1.0 ./csm-pacientes
          docker push $DOCKER_USER/csm-pacientes:1.0

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Desplegar en el servidor vía SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e  # Detener el script en caso de error
            
            # Moverse al directorio del proyecto en el servidor
            cd /home/bill/sanatorio-app

            # Asegurar que docker-compose-production.yml siempre use la versión fija
            sed -i 's|billdev1958/sanatorio-back:.*|billdev1958/sanatorio-back:1.0|' docker-compose-production.yml
            sed -i 's|billdev1958/csm-pacientes:.*|billdev1958/csm-pacientes:1.0|' docker-compose-production.yml

            # Descargar las nuevas imágenes
            docker compose pull

            # Usar make para iniciar el entorno de producción
            make prod

            # Limpiar imágenes antiguas y archivos innecesarios
            docker system prune -f
